console.log("------");

function rotateImage(image = [""]) {
  let output = [];
  let length = image.length - 1;

  image.forEach((row, y) => {
    row.split("").forEach((char, x) => {
      const newY = x;
      const newX = Math.abs(length - y);
      if (!output[newY]) {
        output[newY] = [];
      }
      output[newY][newX] = char;
    });
  });

  return output.map((row) => row.join(""));
}

function flipImage(image = [""]) {
  const output = [...image];
  output.forEach((row) => {
    const newRow = row.split("");
    newRow.reverse();
    return newRow.join("");
  });
  return output;
}

function findSnake(origin = [0, 0], picture = [""]) {
  const [x, y] = origin;

  if (y < 2) {
    return false;
  }
  if (x + 19 > picture[0].length - 1) {
    return false;
  }
  const points = [
    [0, -1],
    [1, 0],
    [4, 0],
    [5, -1],
    [6, -1],
    [7, 0],
    [10, 0],
    [11, -1],
    [12, -1],
    [13, 0],
    [16, 0],
    [17, -1],
    [18, -1],
    [18, -2],
    [19, -1],
  ];

  const matchingCoordinates = [];

  points.forEach(([xChange, yChange]) => {
    const realX = xChange + x;
    const realY = yChange + y;
    if (picture[realY][realX] === "#") {
      matchingCoordinates.push([realX, realY]);
    }
  });

  if (matchingCoordinates.length === points.length) {
    return matchingCoordinates;
  }
}

class Tile {
  id = 0;
  borders = [""];
  north = "";
  east = "";
  west = "";
  south = "";
  rotation = 0;
  internal = "";
  isFlipped = undefined;

  constructor(id, borders, internal) {
    this.id = parseInt(id, 10);
    this.borders = borders;
    this.internal = internal;
  }

  getBorders() {
    if (this.isFlipped) {
      return this.getReversedBorders();
    } else {
      return this.getNormalBorders();
    }
  }

  getNormalBorders() {
    let output = [...this.borders];

    for (let i = 0; i < this.rotation; i++) {
      output.unshift(output.pop());
    }

    return output;
  }

  getReversedBorders() {
    const normalBorders = this.getNormalBorders();
    let output = [];

    output.push(reverseBorder(normalBorders[0]));
    output.push(reverseBorder(normalBorders[3]));
    output.push(reverseBorder(normalBorders[2]));
    output.push(reverseBorder(normalBorders[1]));

    return output;
  }

  getInternal() {

    let output = [...this.internal];

    for (let i = 0; i < this.rotation; i++) {
      output = rotateImage(output);
    }
    
    if (this.isFlipped) {
      output = output.map((row) => reverseBorder(row));
    }

    return output;
  }

  rotate() {
    this.rotation++;
  }
}

const test = `Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...`;
const input = `Tile 2729:
###.######
.......#.#
#..#......
....#.#...
...#.....#
.....#.###
...#.....#
........#.
..........
#.......##

Tile 1783:
..#.#.#.##
#..#......
...##....#
..........
#.#...###.
.#........
.....#....
.#.#.#....
##...##...
..###..#.#

Tile 3889:
.#..#..###
###....###
#..#..#..#
#...#....#
#...#.#..#
.......#.#
......#..#
#.#...#..#
#.#......#
#.#.#.....

Tile 3851:
#.##......
...#.#.###
#.......#.
#..#.....#
..........
...##.....
#...#....#
...#....##
.#....#.#.
#..##.####

Tile 1747:
#.#.##.##.
#......#.#
.........#
..........
..........
#..#..#..#
.##.#..#..
#...#.#...
.#.#......
#..###.#.#

Tile 1627:
.#.###..#.
...#.....#
..#......#
#.......##
#.#....#.#
#.#......#
#.#.......
#...##..#.
...#.#...#
...#.#..##

Tile 1433:
##..####.#
...#...#.#
#........#
.##..#...#
......#.#.
#..##..###
#....#.##.
.#.....#..
#........#
#....#.##.

Tile 1213:
.#.##..#.#
#........#
.#......#.
..#.......
...#...#..
.....#....
.....#....
......#...
.#.#......
#.##....##

Tile 1741:
#..#...###
........#.
#...###..#
##........
.##.......
##...#...#
..........
#..#..#.##
###.#..##.
####.###.#

Tile 2083:
#.####.###
...#......
#...#.....
##........
#...#.....
.#..#..##.
#..#.##..#
.#..###..#
#.#......#
.##...###.

Tile 2063:
#...#.#..#
#...#....#
#.#......#
##......#.
.#.......#
#.........
#..#...#.#
........#.
.#.#......
..#.#.#..#

Tile 1109:
.##.#.####
......#...
#........#
#....#..#.
##...#...#
#..#.....#
.......#..
.#..#...#.
#........#
#..#.##.#.

Tile 1049:
####..#...
##.....#.#
#.##...#.#
...#......
.#......#.
#........#
#...##.#..
##.......#
.##.....#.
#####..##.

Tile 1979:
#.###.###.
...#.#...#
..#......#
#.#.#...#.
##........
........#.
#...##....
#.......##
.#....#...
#..#.###.#

Tile 1193:
#.#...#..#
##.##...#.
...#.#....
#.##.#....
......#.#.
#.........
#.#......#
..#.......
#.........
...##..###

Tile 3659:
...#...##.
###.#.....
#..#.....#
..##.##...
#.#....##.
#.#......#
#.......##
.#.....#.#
.####....#
.#######.#

Tile 1811:
.#..####..
#...#.....
.........#
...#....#.
.......#..
.........#
#........#
........##
#.#..#....
###.######

Tile 3541:
####.##..#
##..###..#
##.#.#....
..........
...#....##
##....#..#
###.....#.
#.......##
..#.......
##..###.##

Tile 2113:
##..#..#.#
##..##.#.#
#.......##
.#...##...
..#.#.....
#.......##
...#..#.##
#.....#...
#..##.....
##.##...#.

Tile 2081:
.##.###..#
#.#..#...#
#......##.
....#....#
...#.....#
#.....####
#........#
.##......#
#...#.....
.####.#...

Tile 1021:
##.###.#.#
.#.#..#...
##.#.#####
#...#....#
.....#.#..
#.........
....#.....
...#...#.#
..##.#....
.#.#.###.#

Tile 1487:
..#.#.####
.##..##...
..#.###..#
.##....#..
.#.#..#.##
..#..#..##
##....##.#
........##
...#.##...
#..#.#....

Tile 3767:
.#..##.###
#.#..#...#
#....#..##
#...#.....
.#.#..#...
##..#....#
#.#.##.#.#
#....#..#.
#....##..#
##..###..#

Tile 3109:
#..#.#####
.#..##...#
..#.#....#
#..#.##..#
.......#..
#......#.#
..##.#...#
.#..#.....
#.........
##......#.

Tile 1009:
#..##.###.
..........
##.......#
#.#..##..#
.....#...#
.........#
...#.....#
####.#....
##...#...#
....#..##.

Tile 2693:
#.#..#..#.
..#.#..#..
...##.#...
#.....#.##
.#.......#
.#..###...
....##...#
#..#.#..#.
......#..#
.##...#.#.

Tile 3533:
.#.#.#####
##...#....
#.....#...
.........#
#........#
#......#..
...#.....#
#..#.#....
..##.....#
.#.#.#.##.

Tile 1171:
....#....#
...##...##
#..#..##.#
#........#
........#.
#..#....##
...#.....#
.........#
#....#...#
##.#####..

Tile 1279:
..#.##.###
#.....#..#
..##..#..#
......#...
#..#...#..
...##..##.
.#.....#.#
#.....###.
.....#....
..#..##.#.

Tile 1583:
###..###..
#......#..
.#..#..##.
...#......
...#....##
#...#.#...
...#.....#
...#.....#
#..##.#...
#.#.#...##

Tile 1129:
####..#...
.......###
#..##..#..
##.##...#.
......##..
....#..#..
##.....#..
.....#...#
##......##
..###...#.

Tile 2591:
#..##.#.#.
#......#.#
#........#
#.#.......
#..#.#....
....#..###
...#......
..#.....#.
#...##.#..
#.##..###.

Tile 1597:
##.#.####.
.#..#.#..#
#.........
##....#..#
#........#
..........
#...#.....
.#.......#
.......#.#
#...####..

Tile 1423:
#....#####
..#......#
..##.#..##
.#..##.#.#
#.........
.#......#.
#.....#...
##.#.#...#
#....#....
.#...#.###

Tile 1669:
#.##.#...#
..#.##.#..
#.......#.
.....#....
.#..#.#...
.....#....
.......#..
..........
##.##.....
#.#.#.##..

Tile 1283:
##..###.#.
.....#...#
#..#.....#
#...#....#
#.##.....#
#...#.#..#
#........#
.#...##.##
#...#.#..#
#..#.#.###

Tile 2371:
.##.###.##
#......##.
.#.......#
#....#....
#........#
#....#....
........##
..#.....#.
.......#..
#..###...#

Tile 3823:
..#.######
..#......#
.....#...#
....#...##
#.####...#
......#...
##....#..#
.#.......#
#.#..#.#..
####.##.#.

Tile 2141:
..#...####
...#...#.#
#.........
..###.#.#.
...##.#..#
#.#..##...
..#.......
...#......
#..#.#.##.
##.#.#.#.#

Tile 1861:
#....##...
.#..#.....
##.#......
.##..#.###
#.#.#.....
#...##..##
.#..##...#
....##.#.#
#......##.
#.###.#.##

Tile 1063:
..##.#..#.
....##....
#...##.#.#
#...#.#..#
##....##.#
#.....##..
.#.#.###.#
..#...#...
#.........
#.#.####..

Tile 1847:
.#...##.##
.#.......#
..........
.........#
.#........
....#..###
#.##....#.
..#...#...
#.....#...
#.#..#....

Tile 1733:
#..#.#.#.#
..#.....#.
#........#
#.#..#...#
.####....#
.#........
.##......#
#.......##
........##
#...##..##

Tile 2441:
....######
#......###
.#......#.
#..#....#.
.#..#.#..#
....#.....
.....##...
##.......#
....##....
#......###

Tile 3631:
##.#.#.#.#
#.##.##.#.
#..#..#...
..##.#...#
#.#.###...
#..#...#..
#....#...#
...##.##.#
...#..#..#
##..#.##.#

Tile 2543:
#..#####..
.##....##.
##...##...
......#...
.###.....#
...#......
..##.#..##
.##.......
#..#......
#.####.#..

Tile 1297:
..#.#..#..
........#.
#.#.......
#..#.#....
.#..#####.
#.##....##
#......##.
#..#...##.
#.#..#.##.
###..#..##

Tile 2099:
#..#..##.#
..#.......
#.#..#....
#..#..#...
#.#..#..##
...##...##
#.........
.##.#..#.#
#...##.#.#
###...#..#

Tile 2203:
.#.#..##..
...#.#....
..#....#.#
.#..#....#
.#.##.##..
#.##...##.
........##
...#.#....
.......###
...##.##.#

Tile 3517:
#..#.#..#.
..........
...#.....#
..........
......####
.#........
.#........
......##.#
#..##...#.
.##.###.#.

Tile 2143:
....###.#.
#......#.#
#....#..#.
##....##.#
##....##..
#.........
.#....##.#
#.#.##..##
..#.....##
.###.##.#.

Tile 2791:
###..#..##
###.......
....#.....
#.........
#.###.##..
....####..
...#.....#
....#....#
.....##.##
.##.###..#

Tile 2131:
#.#.###.#.
...#.....#
#.#..##...
#.#...#...
........#.
..........
##.......#
..###...#.
..##.....#
...#...##.

Tile 3797:
####...##.
.##.......
.......#..
......##.#
...#..#..#
#.........
##....##.#
.....#.#.#
#.........
####..###.

Tile 1327:
.#...#..#.
#...#.....
.......#.#
#.###..#..
.....#....
.#...#....
.........#
#......#.#
.....#....
####..##..

Tile 3323:
#.##.#...#
...####.##
#...#.#..#
#..#.#...#
......##..
#..#....#.
#....#...#
....#..#..
#..##....#
.######.#.

Tile 2437:
#.####...#
........#.
...#....##
##...##...
..#####..#
.....#....
...#.#..##
....#...##
...#......
.##.......

Tile 1993:
.#.#######
###....#..
...#......
.#..#.#...
#..#.....#
...##..##.
###...#...
.....#.#.#
.......##.
.#....#...

Tile 2719:
##.##..#.#
...#......
..#.#.....
.#.......#
#.....#...
#...#.##..
#.........
##........
#.#......#
#..##.##..

Tile 2531:
..#.....##
##.#......
...#...#.#
#.#.......
#...#.#..#
...#.....#
#.#......#
#.##.#....
.#.#.....#
#..#####..

Tile 3037:
#.#..#....
#....#...#
#.##...###
#.#..#.#.#
#....#....
.###......
.........#
#.##......
......#...
#..##.##.#

Tile 3469:
#.....##..
.##....#.#
....#...##
.....#.##.
..#...##..
#.#...##.#
#....#....
###.##.#.#
#......##.
####...##.

Tile 2003:
##.#...###
....#.##.#
#..#.#..##
.....#..#.
..#.....##
#.........
#..##..#..
#.##..#.##
.........#
##.#..#...

Tile 3391:
#...##.#..
.#....#...
...##..#..
#.#.......
......#...
.......#.#
......#..#
....###..#
#.....#...
.##.#.#...

Tile 1277:
...###...#
##.##...#.
.......#..
.........#
#......#..
##........
#..##.....
#........#
.#..#...#.
#..#..##..

Tile 3793:
####.#.##.
....#...#.
##........
..........
##..#.....
#..#......
#....#....
#...#....#
..........
########..

Tile 3739:
.#..##.##.
.#......#.
.#...##..#
....#.###.
.........#
.#..#..#..
#..#.##...
#...#.....
....#.....
##.######.

Tile 3373:
#.##.#..##
#.##...##.
#......##.
.#.....#.#
..##.#.#.#
##.#.....#
#.#...#..#
..........
#........#
#.#..##.#.

Tile 3697:
..#.....##
#......#.#
..#.#...##
###..#.##.
##...#..#.
.....####.
#..#.##..#
....#.#...
.....#...#
....#...#.

Tile 1489:
..###.##..
#...#.....
....#...#.
...#.#..##
#.........
......##..
.#....#...
#....##.#.
#...##.#.#
#..#.#...#

Tile 3877:
#......###
#......#..
...#.#....
###...#..#
.#........
#.....##..
#.......#.
#.#..##...
#.........
#######..#

Tile 1373:
.#.....#..
.....#....
#.........
....#....#
..#.###..#
...#..#...
##...##...
...#.....#
#..###.##.
.##.#####.

Tile 2609:
..#...####
#.##....#.
..#.......
#......#..
.......#..
...#....##
#.....#..#
#...#....#
....##...#
.#.##.##..

Tile 1709:
.##..#.#.#
...#......
#.#.#.....
....#...#.
#.....#...
.....#.#.#
#...#.....
.#...##..#
#........#
##.#....#.

Tile 1447:
.#.##.#..#
.....#...#
#..#....##
#........#
...#......
###......#
...#......
#.......##
#.........
#.#.#####.

Tile 2671:
#.##.#####
#..#..##..
#.##.....#
.....#....
##...##..#
#.###....#
#.#....#.#
.#.......#
#.#....###
....#.#..#

Tile 2887:
.###.#...#
#...#..#.#
.....#...#
#.#...##..
..#....###
.#..#..#.#
.#..#.##..
#.#..##...
#.##......
#.##..#...

Tile 2111:
..#..#..##
..........
......#..#
.......#.#
..###.####
#...##...#
..#.#....#
.......##.
..#....#.#
..##.####.

Tile 3041:
##....#..#
#..#.##..#
...#..###.
#.....#.#.
....##...#
..#....#..
#....#..#.
....#.....
...#......
.#.##....#

Tile 2927:
.##...##..
.........#
.#.....#..
#..#.....#
..#.#....#
##..#.#..#
#.##...#..
#.#.......
#.#.....#.
#.#...##..

Tile 2557:
###...#.##
#......#..
##.#.#...#
...#.###.#
#.#..#....
.##.###..#
#......#..
#....#.#..
###.#....#
.#..#.#...

Tile 1663:
##...#.###
#.#.....##
##.....#..
..#......#
#.........
....#....#
...#..#..#
#...#.....
.#......##
##.#......

Tile 1949:
##...###..
..........
....#...##
..........
.#.....##.
#.........
.#....##..
..#.##.###
..#.#....#
.#..####.#

Tile 2953:
.....#...#
##...#....
..#.#..##.
#.......#.
.....#.#..
#.#.#....#
#..###...#
#......#.#
...#......
.#..#..#.#

Tile 2897:
..###..###
#.........
#...##....
......#..#
......##.#
..#..##..#
#..#.#....
##........
#.#......#
.##....#..

Tile 1451:
.#........
#.#.......
##....#.##
#.#.......
....##..#.
##.....###
....#...##
#..#.#.##.
#...##....
##.#.#..#.

Tile 2351:
....#.##..
##........
.........#
#.....#..#
##........
.##...#..#
#...#...##
....#.....
#.#.......
...#...###

Tile 1399:
#######.#.
###....#.#
##.#..#...
#.........
#.#.#.....
..######..
##...#.#..
##...#.#..
.#....#...
#.###.....

Tile 3079:
..#.##.###
....#....#
#........#
##.......#
......#..#
..#....#.#
.......##.
#......#..
...#......
.##..#.#.#

Tile 2027:
.....#.##.
...#.#....
.......#.#
#.#....###
#........#
#....#..##
.##..#..##
#####.##.#
...##....#
#.........

Tile 2239:
...#....##
......#..#
..#......#
.......#.#
#.##.#####
...##...#.
..#.....##
...##.....
##........
.#...#.###

Tile 3019:
.#.#...#..
..#.#.....
.....#..##
####.#...#
.#.##....#
#...#.##.#
##.#.#....
#...#.....
#..#.#..##
####.#..#.

Tile 2579:
.#....##..
.#.##..#.#
#.....#..#
..#......#
#.........
#...#.....
#..#......
#...#.....
...#..#.#.
..#....##.

Tile 2699:
..#.#.....
#..##....#
#..#.#...#
###...####
#.....#..#
#....##.#.
#...##....
........#.
.##..##...
##....#..#

Tile 1667:
..#..###.#
#.#......#
..##.##..#
..#....#.#
.#...#.###
...#..###.
...#..#.##
##.#.##..#
..####.#.#
.#..#.....

Tile 3061:
#.##.#.#.#
.##.##...#
..........
.......#..
.....###..
..##..#..#
#..###...#
#..##.....
#..#....#.
......###.

Tile 1531:
..###.#...
#.....#..#
##.#..#.#.
#.#.##...#
..#......#
..#.#....#
##.##.#...
..##.....#
##...#..##
..####.###

Tile 3929:
#..#..##..
##....#...
.#........
.....##...
...#.....#
..#..##..#
.........#
.....##..#
.#....#...
...##...##

Tile 2711:
.#.####..#
#......#.#
#.#.......
......###.
#.........
#.........
#......#.#
.......#.#
#.....#..#
.#.#.###..

Tile 3907:
#.#.#...#.
....##..#.
.....##.#.
##......##
....#.#..#
#..#.....#
#...#..#..
..##....##
.#........
.#.#..####

Tile 3299:
##...##.##
.#........
#...#....#
.#...#....
.#.#......
#.#...#..#
.#..#....#
.#..#..#.#
.#..#....#
###.#..#.#

Tile 2677:
#.#.##.##.
#.#..#.#.#
....#....#
#.........
##.......#
##.......#
.....#.##.
#....#.#..
.........#
#...###..#

Tile 2207:
.##.#..###
#.#.##....
..........
#.#.#...##
........##
#.#..#....
...##..#.#
.....#.#.#
.........#
.#..##....

Tile 2393:
#.#..###.#
##.##.....
#.........
........##
#.#......#
#..#...#.#
.........#
##..#....#
......#..#
#...#.##..

Tile 1453:
#..#.##...
##....#..#
#.....#.##
#.##....##
..##.#..##
...#...#.#
....##....
#......##.
#......##.
###..####.

Tile 1871:
######.#..
#.......##
......#..#
##.......#
##......#.
..###..#..
...#..##.#
.#.##...#.
........#.
..####...#

Tile 2777:
#.#..#.#.#
......##.#
#.....#.#.
#.#.....##
#....###.#
...##...##
#.......#.
.......#.#
.#....#..#
..#####...

Tile 1223:
...##.#.#.
#...#....#
##........
#.....#..#
.....###.#
....#...##
.....#...#
.........#
#.........
#..###.###

Tile 2633:
..##.##...
###.##.###
..#.#....#
....##....
#..#.#....
.#...#...#
#.##.....#
#.#...##.#
##...#.#.#
..######.#

Tile 3307:
##...###.#
##.......#
#.#...#...
...#.....#
#.....#.##
#.#.......
##.#....##
##......##
.##.#.#..#
#...##..##

Tile 1123:
.#..#.....
#.#...#...
.#..##.#.#
...###.#.#
###...#...
.##....#..
#.#......#
..#..###.#
##.....#.#
###.#..##.

Tile 2797:
.#.######.
#.#.#....#
#.........
##....#..#
#...#....#
###..#....
.##..#####
..#.##....
...#......
..###.##..

Tile 1613:
########..
##.#.....#
....##..##
##.#....#.
#.##...###
#......#..
..........
.......###
....#..###
#.#.##...#

Tile 1511:
###...##.#
#....#....
.........#
..#.....##
###.....#.
#.....#.#.
..###..#.#
#........#
#..#...#.#
#.#..#.##.

Tile 1999:
#..#.#..#.
.........#
.......#..
..#.#.#..#
#....#..##
.#........
##.#.....#
##.......#
#....#..##
###..#.###

Tile 2819:
..#.##...#
#..##...##
..##......
##....#...
#...###..#
#.###....#
.#.#.#.#.#
#..#.....#
..#.......
..##...#.#

Tile 3847:
##.######.
..#.......
.........#
.........#
#..#......
####.....#
..#..#..##
#.....###.
##.....#.#
####....#.

Tile 1723:
...###....
#.........
#.....#...
.....#...#
#....#.#..
#..#.....#
...#......
.#...#..##
#..#.#.#.#
##.###.###

Tile 1039:
#...#.##..
......#..#
#.......##
##....##..
#...#....#
#....#...#
##.#.#.#..
#.#.......
#..#.....#
.#...###..

Tile 3433:
.#.###.#..
#...#....#
#.....#..#
#.....#..#
#........#
.......###
..###.###.
.....#...#
#...#.....
....##..#.

Tile 1069:
.#....#...
###..#....
#.........
#....#.###
....#.#...
..#.....##
#.##.#....
.#.##.#...
..........
.#.#....#.

Tile 3727:
#.#.#####.
...#..#..#
##......##
#.##...#..
#...#.###.
.....#.##.
##..#.##..
#...#.....
....#.....
..#######.

Tile 1301:
#####..#..
.....##...
#.##...#..
.##......#
#.....#...
#....#....
.....#.#.#
#.....#..#
#..#.....#
#.##.#..#.

Tile 3583:
#.###.....
#......#.#
#..#.....#
......##.#
#.....##.#
##....####
###...##..
##.##....#
......##.#
..##...##.

Tile 3191:
.##.#.#...
....#.....
#.#.....##
##.#.#....
...#.....#
#........#
..........
....#.#..#
........##
.###.####.

Tile 1987:
##.....###
..#.......
##.##.#..#
..........
......#..#
#...#.#..#
...#......
###.#..#..
#.##....#.
.##...##.#

Tile 1493:
..##..####
#..#.#...#
...#......
...#....##
#.........
........##
...#.....#
#....##..#
.#.......#
.#.#..#..#

Tile 1699:
.##...#.#.
.#.......#
.........#
..#...#..#
##...#..##
#.#..#....
#..#..#..#
#....#...#
....#.....
#...##..#.

Tile 2459:
.###..##..
#........#
..#.##....
#....#....
#.#..#..##
...####..#
.....##...
..#......#
...#...#.#
#..#..####

Tile 2801:
.......#..
..#.#....#
#.....#...
#..#.....#
.##...#...
#.....#..#
......#.#.
......#...
#....#....
.#.##.###.

Tile 1759:
##.###..##
#.##..#...
#........#
........##
.....#.#.#
..#......#
#.##...#.#
##......##
##.#......
...###.#..

Tile 3821:
..#####.#.
#....#...#
.....#...#
..........
..##.###.#
#....#....
###.#.####
#......#..
#.##.....#
.....###..

Tile 2423:
#.####.#..
.#........
.##......#
...#......
#..##.....
#..##...##
#.........
#.#.##....
...#....#.
######.#.#

Tile 1619:
##.##...##
..##.....#
#....#....
#.#......#
#......#..
.#.#.....#
#..#.....#
##...##..#
#.........
...#..##..

Tile 2539:
#.#.#.##.#
.......###
........#.
..#...#...
#.........
#.##....##
.####.##.#
.........#
##.##..#..
...##.##.#

Tile 2837:
.###.#.#.#
#.####...#
#......##.
#...#.#...
..###....#
..........
.....#...#
#.....##..
#....##...
#....##...

Tile 1181:
#.###....#
.#...#....
....#..#..
....#.....
#.#.##..#.
##...###..
#....#...#
.........#
.##...#..#
..##.#..##

Tile 2731:
.#....##..
......#.#.
......#...
.....#.#..
#.#..##.#.
.....###..
#...##.#..
#...##..#.
#.##.#...#
..#....###

Tile 2477:
####...#.#
...#......
........#.
.......#.#
..........
#.#......#
##...##...
.....#....
##.#.....#
#..#.##..#

Tile 2851:
.#....####
....###...
#.....#..#
#........#
..#.....#.
.#.......#
#.........
...###...#
#.......##
##.##.####

Tile 3779:
...###.##.
#.#..#..#.
##.#..#...
..#....#..
.##..#...#
.#.......#
..##..#...
..#......#
#........#
..##.....#

Tile 1901:
.##..#...#
.........#
..........
#..#####.#
#....#...#
###...#...
...#..#..#
.#..#..#..
....#.....
.##.##....

Tile 3463:
....######
..#....###
##....#..#
#....##.##
#..#......
.........#
..........
#......#..
..........
##....##.#

Tile 1409:
.#.###..#.
#.#..#....
.#.....#.#
#..#......
#.........
#..#......
...###....
.....#....
...#......
##.###.###`;

function reverseBorder(border = "") {
  const output = border.split("");
  output.reverse();
  return output.join("");
}

function matchBorder(a = "", b = "") {
  return a === reverseBorder(b);
}

function getBorderDirection(tile, index = 0) {
  if (tile.isFlipped) {
    return tile.reversedBorders[(index + tile.rotation) % 4];
  } else {
    return tile.normalBorders[(index + tile.rotation) % 4];
  }
}

function createTiles(raw = "") {
  return raw.split("\n\n").map((tile) => {
    const lines = tile.split("\n");
    const id = /\d+/.exec(lines[0])[0];
    const normalBorders = [];
    const borderLeft = [];
    const borderRight = [];
    const borderBottom = reverseBorder(lines[lines.length - 1]);
    lines.slice(1).forEach((line) => {
      borderLeft.unshift(line[0]);
      borderRight.push(line[line.length - 1]);
    });

    normalBorders.push(lines[1]);
    normalBorders.push(borderRight.join(""));
    normalBorders.push(borderBottom);
    normalBorders.push(borderLeft.join(""));

    const internal = tile
      .split("\n")
      .slice(2, -1)
      .map((row) => {
        return row.slice(1, -1);
      });

    return new Tile(id, normalBorders, internal);
  });
}

function getOppositeDirection(target = 0) {
  return ["south", "west", "north", "east"][
    target > -1 ? target % 4 : 4 + target
  ];
}

function getDirection(target = 0) {
  return ["north", "east", "south", "west"][
    target > -1 ? target % 4 : 4 + target
  ];
}

function directionToIndex(target = "") {
  switch (target) {
    case "north":
      return 0;
    case "east":
      return 1;
    case "south":
      return 2;
    case "west":
      return 3;
  }
}

function parseTiles(raw = "") {
  const tiles = createTiles(raw);
  const first = tiles[0];
  first.isFlipped = false;
  first.rotation = 0;

  buildOutFromTarget(
    first,
    tiles.filter((tile) => tile.id !== first.id)
  );

  const map = mapOutTiles(tiles);

  // map.forEach(line => console.log(line.join(" ")));

  return buildOutImage(map, tiles);
}

function buildOutFromTarget(target = new Tile(), tilesLeft = [new Tile()]) {
  const targetBorders = target.getBorders();

  const matchedTiles = targetBorders
    .map((border, index) => {
      const match = tilesLeft
        .map((tile) => {
          let normalMatch = -1;
          let flippedMatch = -1;

          if (tile.isFlipped !== true) {
            normalMatch = tile
              .getNormalBorders()
              .findIndex(
                (x, xIndex) =>
                  tile[getDirection(xIndex)] === "" && matchBorder(x, border)
              );
          }
          if (tile.isFlipped !== false) {
            flippedMatch = tile
              .getReversedBorders()
              .findIndex(
                (x, xIndex) =>
                  tile[getDirection(xIndex)] === "" && matchBorder(x, border)
              );
          }

          if (normalMatch !== -1) {
            return [false, tile];
          } else if (flippedMatch !== -1) {
            return [true, tile];
          }
        })
        .filter((result) => result)[0];

      if (match) {
        const [flipStatus, matchedTile] = match;
        matchedTile.isFlipped = flipStatus;

        while (
          getOppositeDirection(index) !==
          getDirection(
            matchedTile.getBorders().findIndex((x) => matchBorder(x, border))
          )
        ) {
          matchedTile.rotate();
        }

        target[getDirection(index)] = matchedTile.id;
        matchedTile[getOppositeDirection(index)] = target.id;

        return matchedTile;
      }
    })
    .filter((tile) => tile);

  const newTilesLeft = tilesLeft.filter(
    (tile) => !matchedTiles.some((x) => x.id === tile.id)
  );

  return matchedTiles.forEach((tile) => buildOutFromTarget(tile, newTilesLeft));
}

function mapOutTiles(tiles = []) {
  // find top corner
  let leftSide = tiles.find((tile) => tile.north === "" && tile.west === "");
  const output = [];

  while (leftSide) {
    const row = [];
    let currentRow = leftSide;
    while (currentRow) {
      row.push(currentRow.id);
      currentRow = tiles.find((tile) => tile.id === currentRow.east);
    }
    leftSide = tiles.find((tile) => tile.id === leftSide.south);
    output.push(row);
  }

  return output;
}

function buildOutImage(map = [[0]], tiles = [new Tile()]) {
  const final = [];

  map.forEach((row, y) => {
    final.push([]);
    row.forEach((id, x) => {
      const matchingTile = tiles.find((tile) => tile.id === id);
      final[y][x] = matchingTile.getInternal();
    });
  });

  let joined = [];

  final.forEach((row, y) => {
    joined.push([]);
    row.forEach((tile, x) => {
      tile.forEach((line, i) => {
        if (!joined[y][i]) {
          joined[y][i] = "";
        }
        joined[y][i] = joined[y][i] + line;
      });
    });
  });

  joined = joined.reduce((holder, row) => {
    return [...holder, ...row];
  }, []);

  let updatedMap;
  let f = 0;
  let orientedMap;


  while (f < 2) {
    let toTest = [...joined];
    if (f === 1) {
      toTest = flipImage(toTest);
    }

    const matches = [0, 0, 0, 0]
      .map((_, index) => {
        toTest = rotateImage(toTest);
        let thisTest = [...toTest];
        let hasResult = false;
        toTest.forEach((row, y) => {
          for (let x = 0; x < row.length; x++) {
            const snakeCoords = findSnake([x, y], thisTest);
            if (snakeCoords) {
              snakeCoords.forEach(([x,y]) => {
                thisTest[y] = thisTest[y].slice(0, x) + "O" + thisTest[y].slice(x + 1);
              });
              hasResult = true;
            }
          }
        });
        if (hasResult) {
          // console.log(f, index)
          return thisTest;
        }
      })
      .filter((elem) => elem);

    console.log(tiles.find((tile) => tile.id === 1453).getInternal());
    console.log(rotateImage(rotateImage(tiles.find((tile) => tile.id === 1453).getInternal())));

    if (matches.length > 0) {
      updatedMap = matches[matches.length - 1];
    }

    f++;
  }

  updatedMap.forEach(line => console.log(line));

  return updatedMap.reduce((sum, row) => {
    return sum + (row.match(/#/g).length);
  }, 0);
}

const result = parseTiles(input);
// < 1990
// < 1984
console.log(result);
